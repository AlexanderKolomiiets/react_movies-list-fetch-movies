{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imageSrc","imgUrl","className","src","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","handleMovie","useState","setMovie","setQuery","isFetching","setIsFetching","isSearched","setIsSearched","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","disabled","trim","onClick","fetchMovie","a","findedMovie","newMovie","Title","Plot","Poster","imdbID","find","prev","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12fb71ff.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nconst defaultImage\n= 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const imageSrc = movie.imgUrl !== 'N/A' ? movie.imgUrl : defaultImage;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imageSrc}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ResponseError';\n\nconst API_KEY = 'a63158d6';\n\nconst API_URL = `https://www.omdbapi.com/?i=tt3896198&apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\ntype Props = {\n  movies: Movie[],\n  handleMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, handleMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n  const [isSearched, setIsSearched] = useState(false);\n\n  const handleMovieSearch = () => {\n    setIsFetching(true);\n\n    const fetchMovie = async () => {\n      try {\n        const findedMovie = await getMovie(query);\n\n        if ('Error' in findedMovie) {\n          setMovie(null);\n        } else {\n          const newMovie = {\n            title: findedMovie.Title,\n            description: findedMovie.Plot,\n            imgUrl: findedMovie.Poster,\n            imdbUrl: `https://www.imdb.com/title/${findedMovie.imdbID}`,\n            imdbId: findedMovie.imdbID,\n          };\n\n          setMovie(newMovie);\n        }\n      } finally {\n        setIsFetching(false);\n        setIsSearched(true);\n      }\n    };\n\n    fetchMovie();\n  };\n\n  const handleAddMovie = () => {\n    if (!movie) {\n      return;\n    }\n\n    const hasMovie = movies.find(prev => prev.title === movie.title);\n\n    if (hasMovie) {\n      return;\n    }\n\n    handleMovie(movie);\n\n    setMovie(null);\n    setIsSearched(false);\n    setQuery('');\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsSearched(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                {\n                  'is-danger': isSearched && !movie,\n                },\n              )}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {isSearched && !movie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                {\n                  'is-loading': isFetching,\n                },\n              )}\n              disabled={!query.trim() || (isSearched && !movie) || isFetching}\n              onClick={handleMovieSearch}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMovie = (movie: Movie) => {\n    setMovies(prev => [...prev, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          handleMovie={handleMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}